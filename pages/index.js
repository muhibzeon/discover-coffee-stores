import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { Base } from "next/dist/client/components/react-dev-overlay/internal/styles/Base";
import Banner from "../Components/banner";
import Card from "../Components/card";

import coffeeStoresData from "../data/coffee-stores.json";
import { fetchCoffeeStores } from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";
import { useEffect } from "react";

//####Home Page####

//SO this is server side
export async function getStaticProps(context) {
  const coffeeStores = await fetchCoffeeStores();
  return {
    props: { coffeeStores: coffeeStores }, // will be passed to the page component as props
  };
}

export default function Home(props) {
  //Get Location from Geo location API - automated location
  const { handleTrackLocation, latLong, locationErrMsg, isFindingLocation } =
    useTrackLocation();

  //Button 'View Available Stores' handling
  const handleBannerBtnOnClick = () => {
    handleTrackLocation();
  };

  console.log(
    latLong
      .split(",")
      .map((item) => item.trim())
      .join(",")
  );

  //Lets modify the Latlong(just removing a space)
  const modifiedLatLong = latLong
    .split(",")
    .map((item) => item.trim())
    .join(",");

  //re-render the Home Page whenever the LatLong changes, i. e user clicks View Coffee store in a new location
  useEffect(() => {
    async function setCoffeeStoresByLocation() {
      if (modifiedLatLong) {
        try {
          const fetchedCoffeeStores = await fetchCoffeeStores(
            modifiedLatLong,
            40
          );
          console.log({ fetchedCoffeeStores });
        } catch (error) {
          console.log("error: ", { error });
        }
      }
    }
    setCoffeeStoresByLocation();
  }, [modifiedLatLong]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          /* This is the button,  checking against the passed prop(state) isFindingLocation from use-track-location.js*/
          buttonText={
            isFindingLocation ? "Locating..." : "view available stores"
          }
          handleOnClick={handleBannerBtnOnClick}
        />
        {/*Throw an Error Message if Geo Location API fails.*/}
        {locationErrMsg && <p>Something Went Wrong: {locationErrMsg}</p>}
        <div className={styles.heroImage}>
          <Image
            src="/static/hero-image.png"
            width={700}
            height={400}
            alt="ahero"
          />
        </div>

        {/**If the number of returned coffee stores are more than 0 then show them as Cards */}
        {props.coffeeStores.length > 0 && (
          <div className={styles.sectionWrapper}>
            <h2 className={styles.heading2}>Toronto Store</h2>
            <div className={styles.cardLayout}>
              {props.coffeeStores.map((coffeeStore) => (
                <Card
                  key={coffeeStore.fsq_id}
                  name={coffeeStore.name}
                  imgUrl={
                    coffeeStore.imgUrl ||
                    "https://images.unsplash.com/photo-1504753793650-d4a2b783c15e?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2000&q=80"
                  }
                  href={`/coffee-store/${coffeeStore.fsq_id}`}
                  className={styles.card}
                />
              ))}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
